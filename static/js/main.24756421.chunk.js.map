{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","year","rating","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upComing","loading","error","Helmet","Loader","map","movie","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","upcoming","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","tv","name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","TVPresenter","topRated","airingToday","TVContainer","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24756421.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.cd867972.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom: 50px;\n    }\n    \n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid =  styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 20px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{ title }</Title>\n        <Grid>{ children }</Grid>\n    </Container>\n);\n\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 50px;\n    margin-top: 20px;\n`;\n\nexport default () => <Container><span role=\"img\" aria-label=\"Loading\">⏰</span></Container>\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width:100%;\n    display: flex;\n    justify-content: center;\n\n`;\n\nconst Text = styled.span`\n    color : ${props => props.color};\n    font-weight: 600;  \n    font-size: 22px;\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color}>{ text }</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size:12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\n\n\nconst Poster = ({ id, imageUrl, title, year, rating, isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n            <Image\n                bgUrl={\n                    imageUrl\n                    ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                    : require(\"../assets/noPosterSmall.png\")\n                }\n            />\n                <Rating><span role=\"img\" aria-label=\"rating\"></span>🌟{rating}/10</Rating>\n            </ImageContainer>\n            <Title>\n                {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n            </Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upComing, loading, error }) => (\n<>\n<Helmet><title>Moives | Nomflix</title></Helmet>\n{loading ? (<Loader />) :  (\n    <Container>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map(movie =>\n             <Poster \n              key={movie.id} \n              id={movie.id} \n              title={movie.title} \n              imageUrl={movie.poster_path} \n              isMovie={true} \n              rating={movie.vote_average} \n              year={movie.release_date.substring(0,4)}\n              />\n             )}\n        </Section>\n      )}\n      {upComing && upComing.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n          {upComing.map(movie =>\n             <Poster \n             key={movie.id} \n             id={movie.id} \n             title={movie.title} \n             imageUrl={movie.poster_path} \n             isMovie={true} \n             rating={movie.vote_average} \n             year={movie.release_date.substring(0,4)}\n             />\n             )}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n          {popular.map(movie => \n          <Poster \n          key={movie.id} \n          id={movie.id} \n          title={movie.title} \n          imageUrl={movie.poster_path} \n          isMovie={true} \n          rating={movie.vote_average} \n          year={movie.release_date.substring(0,4)}\n          />\n          )}\n        </Section>\n      )}\n      { error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>)}\n</>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upComing: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"3a4c8ca7b4e36850b8eb457138943222\",\n        language: \"ko-KR\"\n    },\n});\nexport const moviesApi= {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upComing: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => api.get(`movie/${id}`,{\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search : term => api.get(\"search/movie\",{\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    tvDetail: id => api.get(`tv/${id}`,{\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search : term  => api.get(\"search/tv\",{\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};\n\n\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upComing }\n      } = await moviesApi.upComing();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upComing,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\"\n      });\n    } finally {\n      this.setState({ loading: false});\n    };\n  }\n\n  render() {\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upComing={upComing}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet><title>Search | nomflix</title></Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster \n              key={movie.id} \n              id={movie.id} \n              title={movie.title} \n              imageUrl={movie.poster_path} \n              isMovie={true} \n              rating={movie.vote_average} \n              year={movie.release_date.substring(0,4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(tv => (\n              <Poster \n              key={tv.id} \n              id={tv.id} \n              title={tv.name} \n              imageUrl={tv.poster_path} \n              isMovie={false} \n              rating={tv.vote_average} \n              year={tv.first_air_date.substring(0,4)}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    { error && <Message color=\"#e74c3c\" text={error} />}\n    { movieResults &&\n      tvResults &&\n      tvResults.length === 0 &&\n      movieResults.length === 0 && \n      (<Message text=\"Noting Found\" color=\"#95a5a6\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;  \n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 2;\n    width: 60%;\n\n`;\n\n\nconst DetailPresenter = ({ result, loading, error }) => (\n    <>\n    <Helmet><title>Loading | Nomflix</title></Helmet>\n   { loading ? <Loader /> : (\n    <Container>\n        <Helmet><title>{ result.title ? result.title : result.name }</title></Helmet>    \n        <Backdrop \n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} \n        />\n        <Content>\n            <Cover \n                bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/noPosterSmall.png\")}\n             />\n            <Data>\n                <Title>\n                    { result.title ? result.title : result.name }\n                </Title>\n                <ItemContainer>\n                    <Item>{result.release_date ? result.release_date.substring(0,4) : result.first_air_date.substring(0,4)}</Item>\n                    <Divider>|</Divider>\n                    <Item>{result.runtime ? result.runtime : result.episode_run_time[0]}mins</Item>\n                    <Divider>|</Divider>\n                    <Item>{result.genres && result.genres.map((genre, index) => index+1 === result.genres.length ? genre.name : ` ${genre.name} / `)}</Item>\n                </ItemContainer>\n                <Overview>\n                    {result.overview}\n                </Overview>\n          </Data>\n        </Content>\n    </Container>)}\n    </>\n);\n\nDetailPresenter.propTypes = {\n    result: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\"\nimport { tvApi, moviesApi } from \"../../api\";\n\n\nexport default class extends React.Component {\n    constructor(props) {\n      super(props);\n      const {\n        location: { pathname }\n      } = props;\n      this.state = {\n        result: null,\n        error: null,\n        loading: true,\n        isMovie: pathname.includes(\"/movie/\")\n      };\n    }\n  \n    async componentDidMount() {\n      const {\n        match: {\n          params: { id }\n        },\n        history: { push }\n      } = this.props;\n      const { isMovie } = this.state;\n      const parsedId = parseInt(id);\n      if (isNaN(parsedId)) {\n        return push(\"/\");\n      }\n      let result = null;\n      try {\n        if (isMovie) {\n          ({ data: result } = await moviesApi.movieDetail(parsedId));\n        } else {\n          ({ data: result } = await tvApi.tvDetail(parsedId));\n        }\n      } catch {\n        this.setState({ error: \"Can't find anything.\" });\n      } finally {\n        this.setState({ loading: false, result });\n      }\n    }\n  \n    render() {\n      const { result, error, loading } = this.state;\n      return <DetailPresenter result={result} error={error} loading={loading} />;\n    }\n  }","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0px 100px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n  <Helmet><title>TVs | Nomflix</title></Helmet>\n    {loading ?  (<Loader />) :  (\n    <Container>\n      \n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated TV Shows\">\n          {topRated.map(tv => \n          <Poster \n          key={tv.id} \n          id={tv.id} \n          title={tv.name} \n          imageUrl={tv.poster_path} \n          isMovie={false} \n          rating={tv.vote_average}  \n          year={tv.first_air_date.substring(0,4)}\n          />\n          )}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Upcoming TV Shows\">\n          {airingToday.map(tv =>\n             <Poster \n             key={tv.id} \n             id={tv.id} \n             title={tv.name}\n             imageUrl={tv.poster_path} \n             isMovie={false} \n             rating={tv.vote_average} \n             year={tv.first_air_date.substring(0,4)}\n             />\n             )}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular TV Shows\">\n          {popular.map(tv =>\n             <Poster \n             key={tv.id} \n             id={tv.id} \n             title={tv.name} \n             imageUrl={tv.poster_path} \n             isMovie={false} \n             rating={tv.vote_average} \n             year={tv.first_air_date.substring(0,4)}\n             />\n             )}\n        </Section>\n      )}\n      { error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>)}\n  </>\n);\n\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport { tvApi } from \"../../api\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null, \n        airingToday: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try{\n            const { data : { results: topRated }} = await tvApi.topRated();\n            const { data : { results: airingToday }} = await tvApi.airingToday();\n            const { data : { results: popular }} = await tvApi.popular();\n            this.setState({\n                topRated,\n                airingToday,\n                popular\n            });\n\n        }catch{\n            this.setState({\n                error : \"Can't find tv information.\"\n            });\n\n        }finally{\n            this.setState({\n                loading: false\n            });\n\n        };\n    };\n\n    render() {\n        const { topRated, airingToday, popular, error, loading} = this.state\n\n        return (\n            <TVPresenter\n                topRated={topRated}\n                airingToday={airingToday}\n                popular={popular}\n                error={error}\n                loading={loading}\n             />\n        )\n    }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0px 10px;\n    background-color: rgba(20, 20, 20, 0.8);\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display:flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\n\nexport default withRouter(({location: { pathname }}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Moives</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\";\nimport TV from \"../Routes/TV\";\nimport Header from \"./Header\";\n\n\nexport default () => (\n    <Router>\n        <>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/tv\" component={TV} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/show/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n        </>\n    </Router>\n);\n\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color:rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}